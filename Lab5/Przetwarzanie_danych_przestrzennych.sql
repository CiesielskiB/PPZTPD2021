
--zad1a
INSERT INTO USER_SDO_GEOM_METADATA VALUES ('FIGURY', 'KSZTALT', MDSYS.SDO_DIM_ARRAY(
    MDSYS.SDO_DIM_ELEMENT('X', 0, 10, 0.01),
    MDSYS.SDO_DIM_ELEMENT('Y', 0, 10, 0.01)),
    NULL
);

--zad1b
SELECT SDO_TUNE.ESTIMATE_RTREE_INDEX_SIZE(3000000, 8192, 10, 2, 0) 
FROM FIGURY
WHERE ROWNUM <= 1;

--zad1c
CREATE INDEX FIGURY_IDX 
ON FIGURY(KSZTALT) 
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

--zad1d
SELECT ID 
FROM FIGURY
WHERE SDO_FILTER(KSZTALT, SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(3,3, NULL), NULL, NULL)) = 'TRUE';

-- Odp: Wynik nie odpowiada rzeczywistości. 
-- Dla operatora SDO_FILTER wykorzystywana jest jedynia pierwsza faza przetwarzania zapytań, 
-- bazująca na podstawie aproksymacji opartej na utworzonym wcześniej indeksie.

--zad1e
SELECT ID 
FROM FIGURY 
WHERE SDO_RELATE(KSZTALT, SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(3,3, NULL), NULL, NULL), 'mask=ANYINTERACT') = 'TRUE';

--odp: Tak.

--zad2a

SELECT A.CITY_NAME AS MIASTO, SDO_NN_DISTANCE(1) AS ODL 
FROM MAJOR_CITIES A, MAJOR_CITIES B
WHERE SDO_NN(A.GEOM, B.GEOM, 'sdo_num_res=10 unit=km', 1) = 'TRUE' 
    AND B.CITY_NAME = 'Warsaw'
    AND A.CITY_NAME != 'Warsaw';
    
--zad2b
SELECT A.CITY_NAME AS MIASTO 
FROM MAJOR_CITIES A, MAJOR_CITIES B
WHERE SDO_WITHIN_DISTANCE(A.GEOM, B.GEOM, 'distance=100 unit=km') = 'TRUE' 
    AND B.CITY_NAME = 'Warsaw' 
    AND A.CITY_NAME != 'Warsaw';
    
    
--zad2c
SELECT B.CNTRY_NAME, B.CITY_NAME AS MIASTO 
FROM COUNTRY_BOUNDARIES A, MAJOR_CITIES B
WHERE SDO_RELATE(A.GEOM, B.GEOM,  'mask=CONTAINS') = 'TRUE' 
    AND B.CNTRY_NAME = 'Slovakia' 

--zad2d

SELECT B.CNTRY_NAME AS PANSTWO, SDO_GEOM.SDO_DISTANCE(A.GEOM, B.GEOM, 1, 'unit=km') AS ODL 
FROM COUNTRY_BOUNDARIES A, COUNTRY_BOUNDARIES B
WHERE SDO_RELATE(A.GEOM, B.GEOM, 'mask=TOUCH') != 'TRUE' 
    AND A.CNTRY_NAME = 'Poland'
    AND B.CNTRY_NAME != 'Poland';
    
--zad3a

SELECT B.CNTRY_NAME AS KRAJ, SDO_GEOM.SDO_LENGTH(SDO_GEOM.SDO_INTERSECTION(A.GEOM, B.GEOM, 1), 1, 'unit=km') AS ODLEGLOSC 
FROM COUNTRY_BOUNDARIES A, COUNTRY_BOUNDARIES B
WHERE SDO_FILTER(A.GEOM, B.GEOM) = 'TRUE' 
    AND A.CNTRY_NAME = 'Poland' 
    AND B.CNTRY_NAME != 'Poland';

--zad3a

SELECT CNTRY_NAME FROM COUNTRY_BOUNDARIES 
WHERE SDO_GEOM.SDO_AREA(GEOM, 1, 'unit=SQ_KM') = (
    SELECT MAX(SDO_GEOM.SDO_AREA(GEOM, 1, 'unit=SQ_KM')) 
    FROM COUNTRY_BOUNDARIES
    );


--zad3c

SELECT SDO_GEOM.SDO_AREA(
    SDO_GEOM.SDO_MBR(SDO_GEOM.SDO_UNION(A.GEOM, B.GEOM, 1)), 1, 'unit=SQ_KM'
) AS SQ_KM FROM MAJOR_CITIES A, MAJOR_CITIES B WHERE A.CITY_NAME = 'Warsaw' AND B.CITY_NAME = 'Lodz';

--zad3d

SELECT SDO_GEOM.SDO_UNION(A.GEOM, B.GEOM, 1).GET_GTYPE() AS GTYPE 
FROM COUNTRY_BOUNDARIES A, MAJOR_CITIES B 
WHERE A.CNTRY_NAME = 'Poland' 
    AND B.CITY_NAME = 'Prague';
    
--zad3e

SELECT A.CITY_NAME, A.CNTRY_NAME 
FROM MAJOR_CITIES A, COUNTRY_BOUNDARIES B 
WHERE A.CNTRY_NAME = B.CNTRY_NAME 
    AND SDO_GEOM.SDO_DISTANCE(A.GEOM, SDO_GEOM.SDO_CENTROID(B.GEOM, 1), 1) = (
    SELECT MIN(SDO_GEOM.SDO_DISTANCE(A.GEOM, SDO_GEOM.SDO_CENTROID(B.GEOM, 1), 1)) 
    FROM MAJOR_CITIES A, COUNTRY_BOUNDARIES B 
    WHERE A.CNTRY_NAME = B.CNTRY_NAME
);

    
--zad4f

SELECT A.NAME, SUM(SDO_GEOM.SDO_LENGTH(SDO_GEOM.SDO_INTERSECTION(A.GEOM, B.GEOM, 1), 1, 'unit=km')) AS DLUGOSC
FROM RIVERS A, COUNTRY_BOUNDARIES B 
WHERE B.CNTRY_NAME = 'Poland' 
    AND SDO_RELATE(A.GEOM, B.GEOM, 'mask=ANYINTERACT') = 'TRUE'
GROUP BY A.NAME;











